/**
 * Handle the complete card structure
 * @param {HTMLElement} element - Any element within the card hierarchy
 * @returns {Object} - References to all important elements
 */
findCardElements(element) {
  // Starting point could be any element in the hierarchy
  const result = {
    columnItem: null,
    draggable: null,
    clickable: null,
    tileWrapper: null,
    viewContainer: null,
    ticketCard: null,
    ticketId: null
  };
  
  // Find the column item (outermost container)
  result.columnItem = element.closest(CONFIG.selectors.columnItemSelector);
  
  // If we can't find the column item, try to look for other elements
  if (!result.columnItem) {
    // Try to find the draggable container
    result.draggable = element.closest(CONFIG.selectors.draggableItemSelector);
    
    // If found, try to find the column item from the draggable
    if (result.draggable) {
      result.columnItem = result.draggable.closest(CONFIG.selectors.columnItemSelector);
    }
  } else {
    // If column item was found, find draggable inside it
    result.draggable = result.columnItem.querySelector(CONFIG.selectors.draggableItemSelector);
  }
  
  // Continue finding elements in the hierarchy
  if (result.draggable) {
    result.clickable = result.draggable.querySelector(CONFIG.selectors.clickableSelector);
  }
  
  if (result.clickable) {
    result.tileWrapper = result.clickable.querySelector(CONFIG.selectors.tileWrapperSelector);
  }
  
  if (result.tileWrapper) {
    result.viewContainer = result.tileWrapper.querySelector(CONFIG.selectors.viewSelector);
  }
  
  if (result.viewContainer) {
    result.ticketCard = result.viewContainer.querySelector(CONFIG.selectors.ticketCardSelector);
  }
  
  // Try to get ticket ID
  if (result.ticketCard) {
    result.ticketId = result.ticketCard.getAttribute(CONFIG.selectors.ticketIdAttribute);
  } else if (element.hasAttribute(CONFIG.selectors.ticketIdAttribute)) {
    result.ticketId = element.getAttribute(CONFIG.selectors.ticketIdAttribute);
  }
  
  // If we still don't have the ticket ID, try to find it in other elements
  if (!result.ticketId) {
    const possibleIdElements = [
      result.columnItem,
      result.draggable,
      result.ticketCard
    ];
    
    for (const elem of possibleIdElements) {
      if (elem && elem.hasAttribute(CONFIG.selectors.ticketIdAttribute)) {
        result.ticketId = elem.getAttribute(CONFIG.selectors.ticketIdAttribute);
        break;
      }
    }
  }
  
  return result;
}